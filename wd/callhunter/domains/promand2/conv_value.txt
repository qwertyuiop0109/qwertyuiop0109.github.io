
(function(window, document) {
    // Приватные функции для работы с cookies
    const cookieManager = {
        set: function(name, value, days) {
            try {
                const date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                const expires = `; expires=${date.toUTCString()}`;
                document.cookie = `${encodeURIComponent(name)}=${encodeURIComponent(value)}${expires}; path=/; secure; samesite=strict`;
                return true;
            } catch (error) {
                console.error('Error setting cookie:', error);
                return false;
            }
        },
        
        get: function(name) {
            try {
                const nameEQ = encodeURIComponent(name) + '=';
                const cookies = document.cookie.split(';');
                
                for (let i = 0; i < cookies.length; i++) {
                    let cookie = cookies[i];
                    while (cookie.charAt(0) === ' ') {
                        cookie = cookie.substring(1, cookie.length);
                    }
                    if (cookie.indexOf(nameEQ) === 0) {
                        return decodeURIComponent(cookie.substring(nameEQ.length, cookie.length));
                    }
                }
                return null;
            } catch (error) {
                console.error('Error getting cookie:', error);
                return null;
            }
        }
    };

    // Приватная функция для очистки цены
    const cleanPriceString = function(priceText) {
        try {
            return priceText.replace(/[^0-9\.]/g, '');
        } catch (error) {
            console.error('Error cleaning price string:', error);
            return '';
        }
    };

    // Основная функция отслеживания цены
    const saveOrderPriceInCookie = function() {
        try {

            // XPath
            //const priceElement = document.evaluate('//*[@class="order-summary-b"]', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
            // JS Path
            const priceElement = document.querySelector("#cart > div.order-summary > div.order-summary-b");
            // Полный JS Path
            //const priceElement = window.document.querySelector("#some-id > div.order-summary-b");
            //const priceElement = undefined;

            
            if (!priceElement) {
                return false;
            }

            const priceText = priceElement.textContent.trim();
            const price = cleanPriceString(priceText);
            
            if (!price) {
                return false;
            }

            const existingPrice = cookieManager.get('SSorderPrice');
            
            if (price !== existingPrice) {
                console.log(price)
                const ret = cookieManager.set('SSorderPrice', price, 7);
                console.log(document.cookie)
                return ret;
            }

            return true;
        } catch (error) {
            console.error('Error in saveOrderPriceInCookie:', error);
            return false;
        }
    };

    // Инициализация отслеживания цены
    const initPriceTracking = function() {
        try {
            // Первоначальное сохранение цены
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', saveOrderPriceInCookie);
            } else {
                saveOrderPriceInCookie();
            }

            // Настройка MutationObserver для отслеживания изменений
            const observer = new MutationObserver((mutations) => {
                // Добавляем debounce для предотвращения частых вызовов
                clearTimeout(window._priceUpdateTimeout);
                window._priceUpdateTimeout = setTimeout(saveOrderPriceInCookie, 300);
            });

            observer.observe(document.body, {
                childList: true,
                subtree: true,
                characterData: true
            });

            return true;
        } catch (error) {
            console.error('Error initializing price tracking:', error);
            return false;
        }
    };

    // Запуск отслеживания
    initPriceTracking();
})(window, document);


// Версия с улучшенной читаемостью (немного больше размер, но легче поддерживать):
!function(w,d){const c={set:(n,v,days)=>{try{const t=new Date;return t.setTime(t.getTime()+864e5*days),d.cookie=`${encodeURIComponent(n)}=${encodeURIComponent(v)}; expires=${t.toUTCString()}; path=/; secure; samesite=strict`,!0}catch(e){return console.error(e),!1}},get:n=>{try{const q=encodeURIComponent(n)+"=",c=d.cookie.split(";");for(let i=0;i<c.length;i++){let x=c[i].trim();if(0===x.indexOf(q))return decodeURIComponent(x.substring(q.length))}return null}catch(e){return console.error(e),null}}},p=t=>{try{
return t.replace(/[^0-9\.]/g,"")
}catch(e){return console.error(e),""}},s=()=>{try{
// XPath
//const e = d.evaluate('//*[@class="order-summary-b"]', d, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
// JS Path
//const e=d.querySelector("#cart > div.order-summary > div.order-summary-b");
// Полный JS Path
//const e = w.d.querySelector("#some-id > div.order-summary-b");
const e = undefined;
if(!e)return!1;const t=p(e.textContent.trim());if(!t)return!1;const n=c.get("SSorderPrice");if(t!==n){console.log(t);const e=c.set("SSorderPrice",t,7);return console.log(d.cookie),e}return!0}catch(e){return console.error(e),!1}};(()=>{try{"loading"===d.readyState?d.addEventListener("DOMContentLoaded",s):s();new MutationObserver(()=>{clearTimeout(w._priceUpdateTimeout),w._priceUpdateTimeout=setTimeout(s,300)}).observe(d.body,{childList:!0,subtree:!0,characterData:!0})}catch(e){console.error(e)}})()}(window,document);


!function(w,d){const e={set:(e,t,n)=>{try{const o=new Date;return o.setTime(o.getTime()+24*n*60*60*1e3),d.cookie=`${encodeURIComponent(e)}=${encodeURIComponent(t)}; expires=${o.toUTCString()}; path=/; secure; samesite=strict`,!0}catch(e){return console.error(e),!1}},get:e=>{try{const t=encodeURIComponent(e)+"=",n=d.cookie.split(";");for(let e=0;e<n.length;e++){let o=n[e];for(;" "===o.charAt(0);)o=o.substring(1);if(0===o.indexOf(t))return decodeURIComponent(o.substring(t.length))}return null}catch(e){return console.error(e),null}}},t=()=>{try{
// XPath
//const t = d.evaluate('//*[@class="order-summary-b"]', d, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
// JS Path
//const t=d.querySelector("#cart > div.order-summary > div.order-summary-b");
// Полный JS Path
//const t = w.d.querySelector("#some-id > div.order-summary-b");
const t = undefined;
if(!t)return;
const n=t.textContent.trim().replace(/[^0-9\.]/g,"");
if(n){const t=e.get("SSorderPrice");n!==t&&e.set("SSorderPrice",n,7)}}catch(e){console.error(e)}};d.readyState==="loading"?d.addEventListener("DOMContentLoaded",t):t(),new MutationObserver(()=>{clearTimeout(w._priceUpdateTimeout),w._priceUpdateTimeout=setTimeout(t,300)}).observe(d.body,{childList:!0,subtree:!0,characterData:!0})}(window, document);


настраиваем цену (const t),
проверяем в console.log(document.cookie) наличие куки SSorderPrice




=========================================================================

(function(window, document) {

       window.IPclhrDataUpdate = {}
       window.IPclhrDataUpdate.AdwConvHit = {}

})(window, document);





(function(window, document) {
    // Конфигурация
    const config = {
        currency: 'UAH'  // Можно закомментировать или оставить пустым
        // currency: ''  // Пример отключения валюты
    };

    // Безопасное получение cookie
    const getCookie = function(name) {
        try {
            const nameEQ = encodeURIComponent(name) + '=';
            const cookies = document.cookie.split(';');
            
            for (let i = 0; i < cookies.length; i++) {
                let cookie = cookies[i].trim();
                if (cookie.indexOf(nameEQ) === 0) {
                    return decodeURIComponent(cookie.substring(nameEQ.length));
                }
            }
            return null;
        } catch (error) {
            console.error('Error getting cookie:', error);
            return null;
        }
    };

    // Безопасное обновление данных конверсии
    const updateConversionData = function() {
        try {
            const IPclhrDataUpdate = window.IPclhrDataUpdate;
            
            if (!IPclhrDataUpdate?.AdwConvHit) {
                return false;
            }

            const orderPrice = getCookie('SSorderPrice');
            
            if (!orderPrice) {
                return false;
            }

            // Обновляем значение конверсии
            IPclhrDataUpdate.AdwConvHit.google_conversion_value = orderPrice;
            
            // Обновляем валюту только если она задана и не пустая
            if (config.currency && config.currency.trim()) {
                IPclhrDataUpdate.AdwConvHit.google_conversion_currency = config.currency;
            }
            
            return true;
        } catch (error) {
            console.error('Error updating conversion data:', error);
            return false;
        }
    };

    // Запускаем обновление при загрузке страницы
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', updateConversionData);
    } else {
        updateConversionData();
    }
})(window, document);


// Минимизированная версия:
!function(e,t){const n={
//currency:"USD"
},r=e=>{try{const n=encodeURIComponent(e)+"=",r=t.cookie.split(";");for(let e=0;e<r.length;e++){let t=r[e].trim();if(0===t.indexOf(n))return decodeURIComponent(t.substring(n.length))}return null}catch(e){return console.error(e),null}},o=()=>{try{const t=e.IPclhrDataUpdate;if(!t?.AdwConvHit)return!1;const o=r("SSorderPrice");return!!o&&(t.AdwConvHit.google_conversion_value=o,n.currency&&n.currency.trim()&&(t.AdwConvHit.google_conversion_currency=n.currency),!0)}catch(e){return console.error(e),!1}};"loading"===t.readyState?t.addEventListener("DOMContentLoaded",o):o()}(window,document);

настраиваем валюту (currency:"USD") - это необязательно,
проверяем в console.log(IPclhrDataUpdate.AdwConvHit) наличие google_conversion_value и если указали валюту то google_conversion_currency


=======================================


	if (window.IPclhrDataUpdate && window.IPclhrDataUpdate.AdwConvHit) {

!function(){const e={set:(e,t,n)=>{try{const o=new Date;return o.setTime(o.getTime()+24*n*60*60*1e3),document.cookie=`${encodeURIComponent(e)}=${encodeURIComponent(t)}; expires=${o.toUTCString()}; path=/; secure; samesite=strict`,!0}catch(e){return console.error(e),!1}},get:e=>{try{const t=encodeURIComponent(e)+"=",n=document.cookie.split(";");for(let e=0;e<n.length;e++){let o=n[e];for(;" "===o.charAt(0);)o=o.substring(1);if(0===o.indexOf(t))return decodeURIComponent(o.substring(t.length))}return null}catch(e){return console.error(e),null}}},t=()=>{try{
// XPath
//const t = document.evaluate('//*[@class="order-summary-b"]', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
// JS Path
//const t=document.querySelector("#cart > div.order-summary > div.order-summary-b");
// Полный JS Path
//const t = window.document.querySelector("#some-id > div.order-summary-b");
const t = undefined;
if(!t)return;
const n=t.textContent.trim().replace(/[^0-9\.]/g,"");
if(n){const t=e.get("SSorderPrice");n!==t&&e.set("SSorderPrice",n,7)}}catch(e){console.error(e)}};document.readyState==="loading"?document.addEventListener("DOMContentLoaded",t):t(),new MutationObserver(()=>{clearTimeout(window._priceUpdateTimeout),window._priceUpdateTimeout=setTimeout(t,300)}).observe(document.body,{childList:!0,subtree:!0,characterData:!0})}(window, document);


!function(e,t){const n={
//currency:"USD"
},r=e=>{try{const n=encodeURIComponent(e)+"=",r=t.cookie.split(";");for(let e=0;e<r.length;e++){let t=r[e].trim();if(0===t.indexOf(n))return decodeURIComponent(t.substring(n.length))}return null}catch(e){return console.error(e),null}},o=()=>{try{const t=e.IPclhrDataUpdate;if(!t?.AdwConvHit)return!1;const o=r("SSorderPrice");return!!o&&(t.AdwConvHit.google_conversion_value=o,n.currency&&n.currency.trim()&&(t.AdwConvHit.google_conversion_currency=n.currency),!0)}catch(e){return console.error(e),!1}};"loading"===t.readyState?t.addEventListener("DOMContentLoaded",o):o()}(window,document);

	}



Как настроить:
1.настраиваем цену (const t),
2.проверяем в console.log(document.cookie) наличие куки SSorderPrice
3.настраиваем валюту (currency:"USD") - это необязательно,
4.проверяем в console.log(IPclhrDataUpdate.AdwConvHit) наличие google_conversion_value и если указали валюту то google_conversion_currency

