(function(window, document) {
    const config = {
        currency: 'UAH'  // Можно закомментировать или оставить пустым
    };

    const cookieManager = {
        set: function(name, value, days) {
            try {
                const date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                const expires = `; expires=${date.toUTCString()}`;
                document.cookie = `${encodeURIComponent(name)}=${encodeURIComponent(value)}${expires}; path=/; secure; samesite=strict`;
                return true;
            } catch (error) {
                console.error('Error setting cookie:', error);
                return false;
            }
        },
        
        get: function(name) {
            try {
                const nameEQ = encodeURIComponent(name) + '=';
                const cookies = document.cookie.split(';');
                
                for (let i = 0; i < cookies.length; i++) {
                    let cookie = cookies[i];
                    while (cookie.charAt(0) === ' ') {
                        cookie = cookie.substring(1, cookie.length);
                    }
                    if (cookie.indexOf(nameEQ) === 0) {
                        return decodeURIComponent(cookie.substring(nameEQ.length, cookie.length));
                    }
                }
                return null;
            } catch (error) {
                console.error('Error getting cookie:', error);
                return null;
            }
        }
    };

    const cleanPriceString = function(priceText) {
        try {
            return priceText.replace(/[^0-9\.]/g, '');
        } catch (error) {
            console.error('Error cleaning price string:', error);
            return '';
        }
    };

    const updateConversionData = function(price) {
        try {
            const IPclhrDataUpdate = window.IPclhrDataUpdate;
            
            if (!IPclhrDataUpdate?.AdwConvHit) {
                return false;
            }

            // Обновляем значение конверсии
            IPclhrDataUpdate.AdwConvHit.google_conversion_value = price;
            
            // Обновляем валюту только если она задана и не пустая
            if (config.currency && config.currency.trim()) {
                IPclhrDataUpdate.AdwConvHit.google_conversion_currency = config.currency;
            }
            
            return true;
        } catch (error) {
            console.error('Error updating conversion data:', error);
            return false;
        }
    };

    const saveOrderPriceInCookie = function() {
        try {
            // XPath
            //const priceElement = document.evaluate('//*[@class="order-summary-b"]', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
            // JS Path
            const priceElement = document.querySelector("#cart > div.order-summary > div.order-summary-b");
            // Полный JS Path
            //const priceElement = window.document.querySelector("#some-id > div.order-summary-b");
            //const priceElement = undefined;


            const existingPrice = cookieManager.get('SSorderPrice');
            
            if (!priceElement) {
                // Если элемент не найден, но есть сохраненная цена - используем её
                if (existingPrice) {
//                    console.log('Using existing price from cookie:', existingPrice);
                    updateConversionData(existingPrice);
                }
                return false;
            }

            const priceText = priceElement.textContent.trim();
            const price = cleanPriceString(priceText);
            
            if (isNaN(price)) {
//если нет цифр, то выход
                return false;
            }

            // Обновляем данные конверсии
            updateConversionData(price);

            if (price !== existingPrice) {

//                console.log('New price:', price);
                const ret = cookieManager.set('SSorderPrice', price, 7);
//                console.log('Cookie:', document.cookie);
                
                return ret;
            }

            return true;
        } catch (error) {
            console.error('Error in saveOrderPriceInCookie:', error);
            return false;
        }
    };

    const initPriceTracking = function() {
        try {
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', saveOrderPriceInCookie);
            } else {
                saveOrderPriceInCookie();
            }

            const observer = new MutationObserver((mutations) => {
                clearTimeout(window._priceUpdateTimeout);
                window._priceUpdateTimeout = setTimeout(saveOrderPriceInCookie, 300);
            });

            observer.observe(document.body, {
                childList: true,
                subtree: true,
                characterData: true
            });

            return true;
        } catch (error) {
            console.error('Error initializing price tracking:', error);
            return false;
        }
    };

    initPriceTracking();
})(window, document);


!function(t,c){function e(){try{var r,e,

t=c.querySelector("#cart > div.order-summary > div.order-summary-b")

,n=o.get("SSorderPrice");return t?(r=t.textContent.trim(),e=i(r),!isNaN(e)&&(a(e),e===n||o.set("SSorderPrice",e,7))):(n&&a(n),!1)}catch(r){return console.error("Error in saveOrderPriceInCookie:",r),!1}}const n={

//currency:"UAH"

},o={set:function(r,e,t){try{var n=new Date,o=(n.setTime(n.getTime()+24*t*60*60*1e3),"; expires="+n.toUTCString());return c.cookie=`${encodeURIComponent(r)}=${encodeURIComponent(e)}${o}; path=/; secure; samesite=strict`,!0}catch(r){return console.error("Error setting cookie:",r),!1}},get:function(r){try{var t=encodeURIComponent(r)+"=",n=c.cookie.split(";");for(let e=0;e<n.length;e++){let r=n[e];for(;" "===r.charAt(0);)r=r.substring(1,r.length);if(0===r.indexOf(t))return decodeURIComponent(r.substring(t.length,r.length))}return null}catch(r){return console.error("Error getting cookie:",r),null}}},i=function(r){try{

return r.replace(/[^0-9\.]/g,"")

}catch(r){return console.error("Error cleaning price string:",r),""}},a=function(r){try{var e=t.IPclhrDataUpdate;return e?.AdwConvHit?(e.AdwConvHit.google_conversion_value=r,n.currency&&n.currency.trim()&&(e.AdwConvHit.google_conversion_currency=n.currency),!0):!1}catch(r){return console.error("Error updating conversion data:",r),!1}};try{"loading"===c.readyState?c.addEventListener("DOMContentLoaded",e):e(),new MutationObserver(r=>{clearTimeout(t._priceUpdateTimeout),t._priceUpdateTimeout=setTimeout(e,300)}).observe(c.body,{childList:!0,subtree:!0,characterData:!0})}catch(r){return console.error("Error initializing price tracking:",r)}}(window,document);