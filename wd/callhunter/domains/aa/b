		//настройки одного фида (начало блока)
		//можно копировать, изменяя значение ключа (id0) в хеше фида и значение параметра в его хеше 'ext'
		"id4":{
			'ext': 'nocross_num', // уникальное расширение файла фида в пределах одного сайта (если фидов несколько в сайте)
					//автоматически назначается значение ключа хеша этого фида
					//можно указать что-то другое, но тогда должен быть уникальный (если фидов несколько в сайте)
					//если уже настроено, то лучше не менять (измениться ссылка фида для загрузки в мерчант и utm-метка фида utmDropShip)



			//'parentFeed': '', //идентификатор (ключ) родительского фида этого скана, из которого можно брать поля типа parentFeed
					    //поля родительского фида указываются в field_value_selector, а тип поля в field_type
					    //если есть этот параметр, то timeHours и startDays берутся у родительского фида и здесь игнорируются
					    //родительский фид - это любой предыдущий фид того же сайта/скана, расположенный до дочернего
					    //дочерний фид запускается всегда одновременно с родительским


			//'childAddByRank': 1, //добавлять страницу в фид, если не один из старших (предыдущих) детей
							//(у которых есть childAddByRank) или родитель не добавили эту страницу
						//параметр только для дочерних фидов (можно использовать только, если указан parentFeed)
						//гарантирует непересечение между родителем и всеми детьми с параметром childAddByRank
						//например, если нужно первые 200 страниц добавить в первый фид, а остальные во второй и т.д.
						//если однотипные товары нужно добавить в разные кампании, 
							//что бы проверить эффективность разных стратегий РК
						//либо при почти разных настройках конфига быть уверенным, что они точно не пересекутся
						//если одинаковые конфиги у фидов - обязательно указывать MAX_ADD_URLS
							//иначе дети никогда не получат записи!

						//страница может быть добавлена, если предыдущие дочерние (с childAddByRank) и родительский фиды ее не добавили
						//то есть, гарантируется, что эту страницу никто из старших, участвущих в "игре", не добавлял
						//другие дети, более младшие (следующие в конфиге) и более старшие,
							//могут добавлять всегда, если у них нет параметра childAddByRank
						//то есть, дети у которых нет childAddByRank - не участвуют в "игре", работают как обычно
						//родитель пишет всегда (если он сам не child с параметром childAddByRank), 
							//а в игре участвуют дети у которых есть параметр childAddByRank
						//поэтому важно понимать, когда указывать MAX_ADD_URLS (при одинаковых конфигах), а когда не указывать (при разных конфигах, на разные группы товара и пр.)
						//если родитель A сам является участником игры другого родителя B, то если запись сделал старший родитель (B)
							//или его старшие дети по отношению к A, то не только родитель A, но и его дети не смогут писать.
							//то есть в игре участвует вся цепочка родительских подчинений


			//'timeHours': '', //часы генерации фида сайта (через запятую) по времени AdWords-аккаунта клиента
					//если закомментированы, то совпадают с часами генерации сайта
					//если пусто, то это 0 часов
					//если в строке указано 'test', то в любой час запускать и создавать файлы, но только в режиме просмотра
					//Примечание по поводу добавления/удаления режима 'test':
					//если после запуска и перед/при завершении скрипта изменить "на лету" параметр на 'test' или наоборот,
					//то не запишуться фиды, которые должны были создаться до изменения параметра.
					//то есть, нужно дождаться полного завершения и сохранения фидов (если это важно),
					//прежде чем менять в timeHours режим, в котором сохраняются фиды (выполнение/просмотр)



			//'startDays': '', //дни месяца генерации фида (через запятую в строке)
					//если закомментированы, то совпадают с днями генерации (startDays) сайта
					//если пусто, то генерируем фид каждые сутки и при каждом запуске скрипта



			'file_type': ['.ga.txt'], //типы расширения файлов записи полей фида (['.html','.ga.xml','.ga.txt','.ga.tsv','.yml.xml','.yrl.xml','.ycar.xml','.ya.tsv'])
					     	//параметр используется, если закомментирован аналогичный параметр поля
						//в настоящий момент поддерживаются ['.html','.ga.xml','.ga.txt','.ga.tsv']

			'htmlencode': 1, // восстанавливать html-сущности и не вставлять CDATA в значение поля (для csv всегда 0 и CDATA не вставляется)
					//html-сущности удаляются при парсинге страниц товара
					//и восстанавливаются перед записью в файл, если htmlencode 1, иначе вставляется CDATA.
					//CDATA вставляется только если есть html-сущности в значении поля.
				     	//параметр используется, если закомментирован аналогичный параметр поля фида



			//'noDropShip': 1, //не добавлять в ссылку всех товаров фида сайта признак перехода по нашей рекламе (/?sodship=y)
						//можно раскомментировать только! для сайтов конкурентов
						//если закомментирован, то совпадает с noDropShip сайта



			//'utmDropShip': 'utm_source=sodship&utm_medium=cpa&utm_campaign=sodship-', 
					     //добавлять в ссылку товаров фида utm-метку фида
					     //в конец utmDropShip добавляется значение параметра 'ext' фида
					     //если закомментирован, то совпадает с utmDropShip сайта



			//'ftp': { login: 'login', password: 'password', host: 'host.com', directory: '/', passive_mode: 1, ssl_mode: 0, files_types: ['.html','.ga.xml','.ga.txt','.ga.tsv','.yml.xml','.yrl.xml','.ycar.xml','.ya.tsv'], createzip: 1, zipfilename: ''},
				 //параметры передачи заархивированных фидов по фтп (например, для отслеживания цен конкурентов)
				       //после создания фида передавать его по фтп
				 //passive_mode рекомендуется всегда включать
				 //createzip передавать архивом - 1, или неархивированные файлы - 0
				 //название zip используется IdName.Id.feed.[feedId|ext].zip (как в названии файла фида)
					//либо если есть непустое уникальное zipfilename (среди любых фидов аккаунта)
				 //files_types - фиды с какими расширениями передавать, используем один или несколько типов ['.html','.ga.xml','.ga.txt','.ga.tsv','.yml.xml','.yrl.xml','.ycar.xml','.ya.tsv']



			//ОТЛИЧИТЕЛЬНЫЕ ПРИЗНАКИ СТРАНИЦ С ТОВАРАМИ (если есть notScanUrlsOnItemPages, то включать только УНИКАЛЬНЫЕ признаки страниц карточки товара!)
			//'skip_parse': [ 	//не парсить указанные значения начала pathname, путь без домена и без #
			//		'',
			//		'/print',
			//		],
			'only_parse': [ 	//парсить только указанные значения начала pathname, путь без домена и без #
					'/product/search/item/',
					],
			//'parseUrlFun': function(url){ var parsed_url = parse_url(url); if (!parsed_url) return 0; url = parsed_url.protocol + parsed_url.hostname + parsed_url.port + parsed_url.pathname + parsed_url.search + parsed_url.hash; /*...*/ return 1},
					//можно задать сложный анализ ограничений парсинга фида через функцию (при ответе 1 - разрешить парсить)
					//например, что бы сохранять по шаблону только нужные ссылки парсинга товара
					//нужно учитывать, что url включает протокол и домен, можно применять parse_url(url)
					//вызывается до парсинга страницы по полям фида (одновременно с skip_parse и only_parse)


			//'checkFieldsFun': function(fields,url){ if (fields && (fields['product_type'] == '/*...*/' ))  return 1},
					//перед записью готовой карточки товара можно сделать анализ всех полей (при ответе 1 - разрешить запись)
					//например, что бы записывать только определенные категории товаров
					//вызывается после парсинга страницы по полям фида, если все поля удовлетворяют условиям


			//'SKIP_FIRST_URLS': 20, //сколько первых товарных позиций пропустить, прежде чем начать добавлять товары в фид и РК
					         //считаются первые ссылки, которые прошли все условия (в т.ч. checkFieldsFun), являются товарными и готовы к записи
						 //например, нам нужно сейчас только 10 000, пропустить пока еще 10 000, и записать в другой фид по тем же настройкам еще 10 000


			//'MAX_ADD_URLS': 20, //максимальное кол-во ссылок для добавления в фид при парсинге товарных страниц, что бы отключить - закомментировать или 0
					      //если подключена поисковая РК, то отслеживается добавление активных групп объявлений, а не добавление в фид



			"id100":{
//код запчасти (маленькими буквами)
				"field_name": 'itemNum',
				"field_value_selector": '#search_info_.display_yes table tbody tr td:nth-child(1)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				//"field_Fun": function(html, selector, url, field_name, fields){ return html; }, 
				'keyword': 'keyword',
			},




			"id101":{
//название запчасти
				"field_name": 'itemName',
				"field_value_selector": '#search_info_.display_yes table tbody tr td:nth-child(3)',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_replace": ['(\\<\\/?\\w[^\\<\\>]*\\>)?', '','gim'],
				"field_Fun": function(html, selector, url, field_name, fields){

//есть в каталоге б/у, убираем
	if (/б\/у/i.test(html))
		return '';

	//удаляем все, начиная с ВОЗВРАТ - Шрус наружный ВОЗВРАТУ НЕ ПОДЛЕЖИТ!
	html = html.replace(/^(.*?)ВОЗВРАТ.*$/, "$1");

	//удаляем все, начиная со скобок - Подушка двигателя левая (№4)
	html = html.replace(/^(.*?)\(.*$/, "$1");

	//убираем масла - у них вроде дороже, чем везде
	if (/Масло /i.test(html))
		return '';

	//это исключение: не слово (есть - но гугл ругается) , поэтому руками преобразуем на ругань гугла
	html = html.replace(/AIR-BAG/g, "Air-Bag");

	return html;
}, 

				'keyword': 'KeyWord',
			},





			"id102":{
//найденные бренды этой запчасти из таблицы "Результат поиска" (первая буква - большая)
//после %%% - найденные номера этой запчасти из таблицы "Результат поиска" (первая буква - большая, потом переделаем)
//если включить параметр anotherOrig, то будет искать все оригинальные номера, не только номер itemNum

//здесь также ограничиваем мин цену не менее 150 грн. (если цена найденных/рекламируемых запчастей меньше 150 грн, то не рекламируем)

				"field_name": 'brands',
				"field_value_selector": '#search_r_.display_yes table#search_result_table.display_yes',
				"field_type": 'html',
				"parsing_type": 'text',
				"field_required": 1,
				"field_visible": 1,
				"field_Fun": function(html, selector, url, field_name, fields){

//минимальная цена на найденные запчасти, в грн
var minCena = 200;

//пока только рекламируем запчасть по номерам, которые есть в верхней таблице
var anotherOrig = 0;

//это рекламируем запчасть по номерам, которые есть в верхней и в нижней таблицах (обязательно тогда давать общую ссылку на каталог, а не точную на товар)
//var anotherOrig = 1;

//это рекламируем запчасть по номерам, которые есть только в нижней таблице (обязательно тогда давать общую ссылку на каталог, а не точную на товар)
//var anotherOrig = 2;


var out = {};
//номера всех оригинальных запчастей
var outNums = {};

//разрешенные бренды (все бренды рекламируемых марок автомобилей, так как там есть неоригинальные запчасти и тогда бренд - это не авто, а бренд запчасти)
//фильтруем только автобренды, при чем те которые нам нужно рекламировать, без брендов неоригинальных запчастей

//brands совпадает с таким же хешем ниже (но не в этой кампании-фиде)
//фильтруем в этой кампании только kia hyundai (то на чем они специализируются)
var brands = {'kia': ['киа'], 'hyundai': ['хюндай','хэндай']};

var allscans = html.split(/\<tr[^\>\<]*\>/mi);
var maxcena = 0;
for (i in allscans) {
	allscans[i] = allscans[i].trim();
	if (allscans[i]) {
		//убрали с чужими складами (закомментировано), только их 4 склада
		//var match = allscans[i].match(/\<td [^\>\<]*id=[\"\']?row_detal_code_[^\>\<]+\>([^\>\<]+)/);
		//только их 4 склада разрешены к показу, остальные не рекламируем
		//var match = allscans[i].match(/\<td [^\>\<]*id=[\"\']?row_detal_code_[^\>\<]+\>([^\>\<]+)\<.*?(?:(?:Кременчуг)|(?:Кривой Рог)|(?:Киев)|(?:Днепр))/);
		var match = allscans[i].match(/\<td [^\>\<]*id=[\"\']?row_detal_code_[^\>\<]+\>([^\>\<]+)\<.*?(?:(?:Кременчук)|(?:Полтава)|(?:Київ)|(?:Дніпро)|(?:Кривий Ріг)|(?:Харьків))/);
		if (match&&match[1]) {
			var foundNum = match[1].trim().toLowerCase();
			if (foundNum) {
				if (anotherOrig) {

					if ((anotherOrig != 2)||((anotherOrig == 2)&&(foundNum != fields.itemNum.field_value))) {

					//нашли любой код в таблице "Результат поиска", проверяем сначала бренд
					var match = allscans[i].match(/\<td [^\>\<]*id=[\"\']?row_detal_brend_[^\>\<]+\>([^\>\<]+)(?:\<.*?\>\s*\d+\.\d+\s*\-\s*(\d+\.\d+)\s*грн.\s*\<)?/);
					if (match&&match[1]) {
						var foundbrand = match[1].trim();
						if (match[2]) {
							var maxcena1 = Number(match[2]);
						} else {
							var maxcena1 = 0;
						}
						//найден бренд бошльшими буквами, проверяем его соотвествие хешу brands
						var match = foundbrand.match(/^([A-Z]+)(?:[^A-Z]+([A-Z]+))?$/);
						if (match&&match[1]) {
							var fbr = 0;
							//var brand = match[1];
							var brand = KeyWordString(match[1], 'KeyWord');
							if (brands[brand.toLowerCase()]) {
								fbr = 1;
								out[brand] = 1;
								outNums['(' + foundNum + ')'] = 1;
							}
							if (match[2]) {
								//var brand = match[2];
								var brand = KeyWordString(match[2], 'KeyWord');
								if (brands[brand.toLowerCase()]) {
									fbr = 1;
									out[brand] = 1;
									outNums['(' + foundNum + ')'] = 1;
								}
							}
							if (fbr) {
								if (maxcena1 > maxcena)
									maxcena = maxcena1;
							}
						}
					}

					}


				} else {

					if (foundNum == fields.itemNum.field_value) {
						//нашли код itemNum в таблице "Результат поиска", проверяем бренд
						var match = allscans[i].match(/\<td [^\>\<]*id=[\"\']?row_detal_brend_[^\>\<]+\>([^\>\<]+)(?:\<.*?\>\s*\d+\.\d+\s*\-\s*(\d+\.\d+)\s*грн.\s*\<)?/);
						if (match&&match[1]) {
							var foundbrand = match[1].trim();
							if (match[2]) {
								var maxcena1 = Number(match[2]);
							} else {
								var maxcena1 = 0;
							}
							//найден бренд бошльшими буквами, проверяем его соотвествие хешу brands
							var match = foundbrand.match(/^([A-Z]+)(?:[^A-Z]+([A-Z]+))?$/);
							if (match&&match[1]) {
								var fbr = 0;
								//var brand = match[1];
								var brand = KeyWordString(match[1], 'KeyWord');
								if (brands[brand.toLowerCase()]) {
									fbr = 1;
									out[brand] = 1;
									outNums['(' + foundNum + ')'] = 1;
								}
								if (match[2]) {
									//var brand = match[2];
									var brand = KeyWordString(match[2], 'KeyWord');
									if (brands[brand.toLowerCase()]) {
										fbr = 1;
										out[brand] = 1;
										outNums['(' + foundNum + ')'] = 1;
									}
								}
								if (fbr) {
									if (maxcena1 > maxcena)
										maxcena = maxcena1;
								}
							}
						}
					}

				}
			}
		}
	}
}

//выходим если найдена цена и она меньше 150
if (maxcena&&(maxcena<minCena))
	return ''; 

out = Object.keys(out);
//if (out.length) {
if (out.length&&(anotherOrig == 1)) {
//может быть ситуация, что основного кода нет в нижней таблице, но есть другие оригиналы (для anotherOrig = 1), тогда добавляем в ЦКС основной код
	outNums['(' + fields.itemNum.field_value + ')'] = 1;
}
outNums = Object.keys(outNums);
if (!outNums.length) {
	return ''; 
}
//соединяем бренды и цифровые ключи
return out.join(',') + '%%%' + outNums.join(','); 
}, 

				//'keyword': 'KeyWord',
			},




			"id103":{
//цифровые КС
				"field_name": 'digitkeys',
				"field_type": ['brands',''],
				"field_required": 1,
				"field_visible": 1,
				"field_Fun": function(html, selector, url, field_name, fields){
var out = '';
var fkeys = html.split('%%%');
if (fkeys[1]) {
	out = fkeys[1].toLowerCase();
}
return out; 
}, 
				//'keyword': 'KeyWord',
			},




			"id104":{
//дополнительные КС из брендов
				"field_name": 'brandkeys',
				"field_type": ['brands',''],
				"field_required": 1,
				"field_visible": 1,
				"field_Fun": function(html, selector, url, field_name, fields){
//если нет в этом хеше, то не заполняем
//brands совпадает с таким же хешем выше
var brands = {'honda': ['хонда'], 'kia': ['киа'], 'hyundai': ['хюндай','хэндай'], 'chevrolet': ['шевроле'], 'chery': ['чери'], 'bmw': ['бмв'], 'audi': ['ауди'], 'alfa': ['альфа'], 'acura': ['акура'], 'toyota': ['тойота'], 'aston': ['астонмартин','астон'], 'fiat': ['фиат'], 'mercedes-benz': ['мерседес','mercedes'], 'jeep': ['джип'], 'nissan': ['ниссан'], 'volvo': ['вольво'], 'ssangyong': ['сангйонг','санг'], 'vw': ['фольксваген','volkswagen'], 'volkswagen': ['фольксваген','vw'], 'renault': ['рено'], 'peugeot': ['пежо'], 'land': ['лендровер','ленд'], 'citroen': ['ситроен'], 'opel': ['опель'], 'jaguar': ['ягуар'], 'lexus': ['лексус'], 'porsche': ['порше'], 'saab': ['сааб'], 'subaru': ['субару'], 'suzuki': ['сузуки'], 'lancia': ['лянча'], 'dacia': ['дачия'], 'bentley': ['бентли'], 'suzuki': ['сузуки'], 'dodge': ['додж'], 'infiniti': ['инфинити'], 'mini': ['мини'], 'mitsubishi': ['митсубиси'], 'ford': ['форд'], 'mazda': ['мазда'], 'skoda': ['шкода'], 'seat': ['сеат'], 'rover': ['ровер'], 'chrysler': ['крайслер'], 'daewoo': ['део'], 'daihatsu': ['дайхатсу'], 'mg': ['мг'], 'smart': ['смарт']};
var out = {};
var fkeys = html.split('%%%');
if (fkeys[0]) {
	var allscans = fkeys[0].toLowerCase().split(',');
	for (i in allscans) {
		var allscans2 = allscans[i].trim();
		if (allscans2) {
	//alert(allscans2)
			if (!out[allscans2]) {
				if (brands[allscans2]) {
					for (ii in brands[allscans2]) {
						out[brands[allscans2][ii]] = 1;
					}
				}
				out[allscans2] = 1;
			}
		}
	}
}
out = Object.keys(out);
return out.join(','); 
}, 
				//'keyword': 'KeyWord',
			},









			"id105":{
//подготовка брендов для объявлений
				"field_name": 'brandsforads',
				"field_type": ['brands',''],
				"field_required": 1,
				"field_visible": 1,
				"field_Fun": function(html, selector, url, field_name, fields){

var out = '';
var fkeys = html.split('%%%');
if (fkeys[0]) {
	var avto = {'Chevrolet': 'Шевроле', 'Aston' :'Астон Мартин', 'Fiat': 'Фиат', 'Mercedes-benz': 'Мерседес', 'Jeep': 'Джип', 'Audi': 'Ауди', 'Toyota': 'Тойота', 'Nissan': 'Ниссан', 'Volvo': 'Вольво', 'Ssangyong': 'Санг Йонг', 'Vw': 'Фольксваген', 'Renault': 'Рено', 'Peugeot': 'Пежо', 'Land': 'Ленд Ровер', 'Alfa': 'Альфа Ромео', 'Citroen': 'Ситроен', 'Kia': 'Киа', 'Opel': 'Опель', 'Bmw': 'Бмв', 'Jaguar': 'Ягуар', 'Lexus': 'Лексус', 'Porsche': 'Порше', 'Saab': 'Сааб', 'Subaru': 'Субару', 'Suzuki': 'Cузуки', 'Lancia': 'Лянча' };
	var allscans = fkeys[0].split(',');
	var avtos = [];
	var notengbrnds = 0;
	var engbrnds = 0;
	for (i in allscans) {
			if (avto[allscans[i]]) {
				//если 2 и больше неанглийских названий, то нельзя их делать все большими (иначе гугл в большинстве случаев отклонит)
				if (notengbrnds) {
					avtos[avtos.length] = avto[allscans[i]];
				} else {
					//теперь вообще низзя все большие буквы (гугл начал блокировать такие объявления, русские точно, английские вроде не блокирует)
					//также поддержка посоветовала перевести КИАПАРТС в английский вариант, как название домена
					//avtos[avtos.length] = avto[allscans[i]].toUpperCase();
					avtos[avtos.length] = avto[allscans[i]];
				}
				notengbrnds++;
			} else {
				//если 2 и больше английских названий, то тоже нельзя их делать все большими (иначе гугл во многих случаях отклонит)
				if (engbrnds) {
					avtos[avtos.length] = allscans[i];
				} else {
					//теперь вообще низзя все большие буквы (гугл начал блокировать такие объявления, русские точно, английские вроде не блокирует)
					//также поддержка посоветовала перевести КИАПАРТС в английский вариант, как название домена
					//avtos[avtos.length] = allscans[i].toUpperCase();
					avtos[avtos.length] = allscans[i];
				}
				engbrnds++;
			}
	}
	if (avtos.length) {
		//надо сортировать - тогда фиксированный порядок, иначе могут меняться местами и пересоздаваться!
		avtos.sort(function(a, b) {
		    if(a < b) { return -1; }
		    if(a > b) { return 1; }
		    return 0;
		});
		out += 'Качественные Оригинальные Запчасти ' + avtos.join(', ') + ' с Доставкой по Украине.';
	}
}
return out; 
}, 

				//'keyword': 'KeyWord',
			},



			"id4":{
				"field_name": 'link',
				"field_type": 'url',
				"field_required": 1,
				"field_visible": 1,
				'htmlencode': 1,
			},



			"id5":{
//рекламируем не только с картинками (поэтому это поле не обязательное, в отличие от прямых заходов на запчасть)
				"field_name": 'image_link',
				"field_value_selector": 'ul#carousel li img',
				"field_type": 'html',
				"parsing_type": 'src',
				//"field_required": 1,
				"field_required": 0,
				"field_visible": 1,
				'keyword': 'keyword',
				'htmlencode': 1,
			},





			"GASearch": { //параметры поисковой РК аккаунта AdWords, где рекламируются товары фида

					//формируются на основе значений полей фида

					//РК может быть совмещенной (поиск+КМС)
					//генерируются объявления и слова и отслеживается наличие товаров, изменения объявлений и базовых ключевых слов
					//на основе уникальных url товара и названия (останавливаем/включаем/удаляем/изменяем группу товара)
					//Не более 20 000 групп объявлений в кампании, поэтому в одном фиде может быть несколько РК, где много товаров распределяются автоматически


					'Id': '', //уникальный элемент названия поисковых кампаний фида аккаунта AdWords, где рекламируются товары фида
						    //Id не должен повторяться в названиях других кампаний, иначе ошибка
						    //Если Id равен '', то название равно Id.feed.[feedId|ext].i где i - порядковый номер кампании фида, начиная с 0
						    //Кампания с номером 0 является основной, из нее автоматически копируются настройки для остальных
						    //Кампания 0 создается автоматически и останавливается, после чего надо настроить параметры кампании 0 и запустить ее
						    //Остальные кампаниия получают настройки и статус кампании 0, то есть после ее запуска запускаются остальные и аналогично остановка
						    //Если Id закомментирован, то отключено управление и обновление РК
						    //когда заканчиваются группы во все существующих РК, автоматически создается новая РК и получает все настройки кампании 0
						    //если группа удаляется, то заново она может появится совсем в другой РК
						    //в Id могут присутствовать пробелы и неанглийские буквы, всего не более 100 символов
						    //если основная кампания 0 активна, то автоматически в неактивные копируются ее настройки и они получают статус активных
						    //то есть, если нужно поменять настройки, то меняем в основной и останавливаем все остальные, после чего они получат копию настроек
						    //если нужно остановить все кампании, то можно остановить только основную кампанию, остальные остановяться автоматом
						    //нельзя останавливать другие кампании без нужды, если активна базовая - они восстановяться все равно и обнулится статистика, так как будут снесены их настройки
						    //РК не изменятся!, если GAShtml = 1


					'GAShtml': 2, //добавление специальго типа расширения файлов .gas.html в фид
							//для демонстрации внешнего вида объявлений на основании параметров GASearch
							// 0 или закомментировано - не добавлять в фид, управление РК включено
							// 1 - добавлять в фид без изменения поисковых РК
							// 2 - добавлять в фид, управление РК включено
							//если не сгенерировались объявления, то запись не создается
							//параметр используется если раскомментировано поле Id
							//внимание! параметр может не обновлять РК (если равен 1)


					'GAShtmlAd': 'Реклама', //название метки "Реклама" в объявлениях .gas.html
								//Если закомментировано, то будет вставлено слово 'Ad'

					'GAShtmlComment': 'Примеры ключевых слов. Будут отфильтрованы при добавлении в кампанию',
								//комментарий перед списком КС после объявлений в .gas.html
								//Если закомментировано, то будет вставлено 'Examples of keywords. Will be filtered when added to a campaign'
								//Другие варианты:
								//Примеры ключевых слов. Будут откорректированы после анализа 
								//Examples of keywords. Will be corrected after analysis
								//Примеры ключевых слов. Будут откорректированы после подписания контракта
								//Examples of keywords. Will be corrected after signing the contract
								//Примеры ключевых слов. Будут повторно проанализированы при добавлении в кампанию.
								//Examples of keywords. Will be re-analyzed when added to a campaign.


					'GAShtmlExt': 'Самые Низкие Цены. Широкий Ассортимент. Всегда в Наличии. Запрос по VIN. Помощь в подборе. Доставка в День Заказа. 12 Лет на Рынке. Гарантия Качества.',
								//демо-расширения уровня рекламной кампании (нужно потом добавить вручную эти расширения в РК)
								//демо-расширения уровня рекламной кампании (нужно потом добавить вручную эти расширения в РК)
								//необязательный параметр, система не контролирует длину его элементов (например, ограничение длины - 25 символов на одно уточнение
										//или структурированное описание (длина описания не включает слова типа 'Бренды: ' 'Модели: ' 'Услуги: ' и ', ' между описаниями))
								//демо-расширения предназначены только для визуального контроля клиентом в фиде РК.
								//значение добавляется "как есть" в файл .gas.html, сразу после описания каждого объявления (сначала вставляется ". " если нет завершающего знака в описании)



					'Budget': 100, //Бюджет РК, используется только на этапе создания РК


					//'keyword': 'KeyWord', //регистр слов в объявлениях, допустимы KeyWord, Keyword, KEYWORD и keyword. Как вставлять текст если поле текстовое (KeyWord - заглавные буквы в каждом слове и Keyword - заглавные буквы в начале предложения)
								//но лучше готовить изначально в полях все корректно (тогда можно, например, использовать в отдельных словах все большие буквы и пр.)
								//если закомментировано, то не используется (берется полученное значение как есть)
							     	//используется, если закомментирован аналогичный параметр в объявлениях


					'priceRound': 100, //Начиная с какой цены отбрасывать дробную часть цены
							  //если закомментировано, то не отбрасывать


					'startbid': 3, //стартовое значение ставки в кампании или группе
							//устанавливается при создании кампании (тег MCLSET1:2:basebid) или ставка группы при ее создании
							//Если не установлен в оптимизаторе NOBIDM:
								//после создания кампании можно изменять только сам тег MCLSET1:2:... в аккаунте (ставка группы меняется автоматически в оптимизаторе)
								//для группы берется значение из MCLSET1:2:basebid кампании, если не находит в названии число, то берет отсюда
							//Если установлен NOBIDM в оптимизаторе, то ставку при создании группы берет всегда отсюда


					'keywordtypes': 3, //типы соответствия добавляемых КС при создании групп
								//0 - точное и широкое с модификаторами соответствия
								//1 - точное соответствие
								//2 - широкое с модификаторами соответствие
								//3 - точное и фразовое соответствия
								//4 - фразовое соответствие
								//5 - точное и широкое с модификаторами соответствия (для цифро-буквенных КС - точное и фразовое соответствия)
								//6 - широкое с модификаторами соответствия (для цифро-буквенных КС - фразовое соответствие)
							//не создаются КС перекрестно, только в последовательности указанной в keys и/или в masskeys и затем дополнительно в fixedkeys
							//действует только при создании групп, при модификации - нет, так как иначе будет конфликтовать с оптимизатором (который может добавлять совсем по другому)
							//поэтому стоит менять между собой только режимы 5,6 или 0,1,2,3,4 (либо вручную дорабатывать как нужно, или заново создавать кампании)
							//а лучше вообще не менять (а управлять из оптимизатора), либо заново создавать кампании
							//например, режим 5 создаст фразовое соответствие для ЦБКС, но оптимизатор потом добавит длинный хвост с широким соотвествием и добавит ЦКБС с пробелами (считая их несколькими словами) в широком соответствии
								//либо, режим 2, 6 создаст широкое соответствие для не ЦБКС, но оптимизатор потом добавит эти слова с точным соотвествием и т.п.
							//с точки зрения оптимизатора все режимы, как правило почти эквивалентны (если не используются спец.настройки оптимизатора)
							//в общем случае - всегда использовать универсальный режим 5 (либо вручную удалять и заново создавать кампании, если нам нужны спец.режимы оптимизатора и keywordtypes)
							//рабочий режим - 5


					'addkeystype': 4, //тип добавления КС (используется при создании и модификации групп)
								//0 - цифровые КС, КС из 3-х слов и в случае, если все КС из 3-х слов имеют статус "мало запросов", дополнительно добавлять КС из 2-х слов  (здесь больше слов добавится чем в 1)
								//1 - цифровые КС, КС из 3-х слов и в случае, если все добавленные слова имеют статус "мало запросов", дополнительно добавлять КС из 2-х слов (здесь меньше слов добавится чем в 0, не добавятся КС из 2-х слов, если у ЦС достаточно показов)
								//2 - КС из 3-х слов и в случае, если все слова имеют статус "мало запросов", дополнительно добавлять КС из 2-х слов
								//3 - только цифровые КС и КС из 3-х слов
								//4 - только цифровые КС
								//5 - только КС из 3-х слов
								//6 - цифровые КС, КС из 3-х слов и КС из 2-х слов (приведет к сливу трафика, если без fixedkeys)
								//7 - только КС из 3-х слов и КС из 2-х слов (приведет к сливу трафика, если без fixedkeys)
								//8 - только КС из 2-х слов (приведет к сливу трафика, если без fixedkeys)

								//стандартно в addkeystype используется 3 и 2 слова в КС,
									//если нужно изменить на другое кол-во слов в КС, то использовать maxNodigaddkeyNum
								//при модификации остановка/удаление КС или удаление/создание групп выполняется согласно modifykeystype

					'maxNodigaddkeyNum': 3, //большее из чисел в addkeystype кол-ва слов в КС (для не ЦКС) (допускается от 3 и больше)
								//сколько будет добавлено слов в КС вместо 3-х и 2-х в addkeystype (по умолчанию 3, то есть 3 и 2)
								//например, если 4, то вместо 3-х и 2-х используется соответственно 4 и 3 в addkeystype
									// если 5, то вместо 3-х и 2-х используется соответственно 5 и 4 в addkeystype
									//и т.д.
								//используется если слишком много КС при малом бюджете и надо уменьшить кол-во активных, а потом после проведения оптимизации можно увеличивать кол-во КС, уменьшая maxNodigaddkeyNum и соотвественно уменьшиться длина КС, при этом остануться активные "длинные хвосты"


					'modifykeystype': 3, //режим модификации КС (используется при модификации групп)
								//0 - стандартный режим (полное удаление/создание новых групп при любых изменениях генерируемых КС)
								//1 - останавливать и добавлять КС без удаления групп
								//2 - дубликат режима 1 (останавливать и добавлять КС без удаления групп)
								//3 - удалять и добавлять КС без удаления групп

								//при работе с оптимизатором читается параметр sskeywrd1 из КС, его содержимое - это КС-источник, который сгенерировал это КС в оптимизаторе
								//существующие в группе КС считаются "рабочими", то есть их нельзя удалять или останавливать, если они включают в себя все слова из любого сгенерированного КС

								//минусы каждого из режимов
								//режим 0 всегда удаляет и создает заново группу, если изменились генерируемые КС (то есть нуча мусорных меток и оптимиазация каждый раз заново)
								//при режиме 1/2 теоретически оптимизатор (а не мерчант-сканер) может восстановить остановленные КС, которых больше нет и не будет на странице (со временем эти слова могут быть остановлены оптимизатором)
									//то есть надо следить за ручными командами восстановления оптимизатором видимости КС и переключать 1/2
									//но если останется какое-то КС в группе, которое никогда больше не будет отвечать содержанию объявления, то это будет проблема, так как это КС будет тяжело выявить оптимизатору (так как оно явно из родственной тематики и будет давать заинтересованность потребителя, но не заказы, то есть сливать бюджет)
									//главный минус - надо восстанавливать активность всех генерируемых КС при любом изменении списка этих КС (всегда modifykeysEnable=1), то есть надежда только на оптимизатор, если постоянно КС уходят и появляются
										//то есть нам нужно восстанавливать много КС, многие из которых могут быть плохими
								//режим 3 может аннулировать статистику "плохих" слов, если они опять появятся на странице и будут созданы мерчант-сканером в группе повторно позже (они опять появяться в рекламе, сливая бюджет)
									//здесь все на автомате, плохое КС, которое повторно появится и будет добавлено в группе, через время будет остановлено, но за это время сольет часть бюджета
									//кроме того, будут полностью удалены все длинные хвосты этого слова, которые снижают его цену
									//но с другой стороны, если КС пропало на странице, то это либо плохая запчасть убранная с продажи, либо запчасть которая быстро продается
									//этот режим оптимален если не использовать оптимизатор с остановкой слов

								//зачем режим 1/2 - например, в автозапчастях может какой-то автомобиль (его запчасть то есть в продаже, то нет) регулярно добавляться/исчезать на странице (если несколько авто или несколько кодов запчастей на странице)
									//если мы будет удалять и создавать каждый раз заново его КС, то будет обнуляться статистика по такому КС (особенно важно если КС дает слив бюджета, то каждый раз оно будет как новое)
								//зачем продублирован режим 1/2 - после восстановления видимости слов в оптимизаторе могут восстановится слова, которые не должны быть активны
									//то есть если была команда восстановления КС оптимизатора VOIDRESTORE или ACCOUNT EFFECTIVITY ACTION = REMOVE, то потом нужно создать merchantfeed_new.txt и поменять в нем здесь 1 на 2 или наоборот
								//при наличии оптимизатора - можно использовать режим 1 (и менять на 2 как написано выше, если мы давали оптимизатору команду восстановить видимость каких-то КС)
											//но если не будем менять, то не очень страшно но при наличии оптимизатора
								//режим 3 лучше всего сейчас, так как при удалении/появлении новых КС в списке генерируемых не нужно восстанавливать активность всех генерируемых КС при любом изменении списка
									//а только появяться новые КС, которые (если они "плохие") точно оптимизатор быстро остановит
								//рабочий режим - 3
									


					'modifykeysEnable': 1, // восстановление активности всех сгенерированных КС после модификации группы
									//0 - активность генерируемых КС не контролируется
									//1 - восстановить активность всех сгенерированных КС только при любом изменении addkeystype или для modifykeystype=1/2 - при любом изменении списка генерируемых КС, после модификации группы
									//2 - всегда восстанавливать активность всех сгенерированных КС после модификации группы (при любой попытке модификации КС в любом режиме modifykeystype и addkeystype или maxNodigaddkeyNum)
									//при изменении addkeystype как правило, стоит восстановить активность всех сгенерированных КС,
										// например, у нас остались неактивные ЦС в режиме addkeystype=5, и если мы переключим addkeystype в режим 4 или 3, то ЦС остануться неактивными, что неправильно
									//для modifykeystype=1/2 при изменении списка генерируемых слов также нужно восстановить видимость всех генерируемых КС, иначе слово, которое появилось, но было раньше остановлено из-за отсутствия именно его товара на странице (если товаров/кодов на странице несколько), не станет активным!
										//тут иначе не получится, надежда на оптимизатор если КС "плохое", либо нужно отслеживать появление в списке генерируемых КС каждого слова
									//в режиме 2, если "плохие" КС были остановлены вручную или оптимизатором, то они станут активными после модификации группы
									//поэтому использовать режим 2 нежелательно
									//рабочий режим - 1



					//'removeLSVKeywords': 1, //1 - удалять при создании/модификации групп все новые КС со статусом "мало запросов" (могут быть удалены все слова в группе)
								//2 - приостанавливать при создании/модификации групп все новые КС со статусом "мало запросов" (могут быть остановлены все слова в группе)
								//0 или параметр закомментирован - ничего не делать при создании групп
							//в основном, это нужно для "красивого" начального создания кампаний/групп с точки зрения отчетов и визуально (что бы клиент не видел совсем бредовые словосочетания)



					'requiredescr': 1,  // 1 - параметр description является обязательным в объявлениях
						//описание всегда обязательно в объявлениях, но оно формируется из нескольких параметров (startdescription, beforeprice, price, afterprice, description, afterdescription)
						//поэтому обычно параметр description необязателен, кроме случая когда есть requiredescr
					     	//используется, если закомментирован аналогичный параметр в объявлениях



					//'noPaths': 1,  // 1 - не добавлять пути к объявлениям
					     	//используется, если закомментирован аналогичный параметр в объявлениях


					//'afterdescrNeed': 1, //обязательно вставлять afterdescription в конце описания
								//если есть afterdescription, то завершает конец description знаками [.!|] или | (если обрезано неоконченное предложение)
							     	//используется, если закомментирован аналогичный параметр в объявлениях


					'powerControl': 0,  // 0 - не контролировать активность кампании
							    // 1 - включать кампанию, если нет ошибок
							    // 2 - включать кампанию если нет ошибок, выключать если есть ошибки



					//ниже описаны 2 типа поведения страниц при отсутствии товара (исчезают или ставят метку "нет в наличии")

					//'removeNotFoundItem': 1, //0 либо закомментирован - отключать ads-группы товаров, которых нет в фиде
								  //1 - удалять ads-группы товаров, которых нет в фиде
								  //параметр удаляет группы если страницы "исчезают" на сайте, не показываются при отсутствии товара


					//'removeOutOfStockItem': [0, 'availability', 'out of stock'],
								//0 - отключать ads-группы товаров, у которых пометка "нет в наличии", но они есть в фиде
									//и учитывать такие группы в общем количестве активных (проверенных/модифицированных) групп
									//то есть, если страница товара есть, но товара нет в наличии, то добавить эту ссылку в список проверенных/модифицированных
									//если указан MAX_ADD_URLS и есть пометка "нет в наличии", то новые группы не добавяться (будут останавливаться и включаться те что есть)
									//параметр позволяет зафиксировать заданные товары, без добавления новых
								//1 - отключать ads-группы товаров, у которых пометка "нет в наличии", но они есть в фиде
									//и НЕ учитывать такие группы в общем количестве активных (проверенных/модифицированных) групп
									//если указан MAX_ADD_URLS и на странице есть пометка "нет в наличии", то добавяться новые группы (неактивные будут останавливаться)
								//2 - удалять ads-группы товаров, у которых пометка "нет в наличии", но они есть в фиде
									//естественно, такие группы не учитываются в общем количестве активных (проверенных/модифицированных) групп
								//значения массива: флаг, название поля, пометка "нет в наличии" в фиде
								//либо закомментировать, тогда не будет искать и останавливать/удалять группы по такому полю товара
								//параметр удаляет/приостанавливает группы если на страницах появляется пометка "нет в наличии" при отсутствии товара



					//дальше используется однотипный вариант значения параметра для формирования строки разбора/парсинга текстовых параметров РК поиска
					//['фиксированое значение до поля','field_name1,field_name2,...','фиксированое значение после поля']
					//как формируется значение текстового параметра РК:
						//при наличии значений массива производится их конкатенация через пробел слева направо
					//то есть:
						//фикс.знач.до. + ' ' + значение поля1 фида + (' ' + каждое след. поле фида) + ' ' + фикс.знач.после.
					//Обновление ads-группы товара выполняется после формирования записи товара в фиде,
						//когда все значения полей уже определены

					//другой вариант использования - функция с переданными значениями полей
					//function(fields){ return fields['link'].field_value },

					//исключение для параметра keys: может использоваться массив однотипных вариантов значений
					//то есть все элементы массива могут быть массивами однотипных вариантов или функциями


					//могут использоватся значения любых полей фида (в т.ч. скрытых, повторяющихся и пр.),
					//кроме полей в виде вложенных аттрибутов (типа shipping и tax)
					


					//поддержифаются модификаторы объявлений, но обязательно размещать с доп. инфокавычками справа
					//{модификатор объявления}[max длина значения модификатора]
					//кавычки удаляются в готовых объявлениях
					//модификаторы можно использовать в параметрах:
					//header header2 startdescription beforeprice afterprice description afterdescription
					//в afterdescription можно вставить модификатор только как его полное значение, а не часть значения



					//три обязательных параметра - url keys header (и также еще description, если указан requiredescr)



					'url': ['','link'], //url, ссылка парсинга товара
					//'url': ['https://kiaparts.com.ua/product/search_detal'], //url, ссылка парсинга товара
					//'url': ['https://kiaparts.com.ua/product/search_detal?sodship=y'], //url, ссылка парсинга товара
								//хотя бы одно указанное поле должно быть обязательным в фиде
								//обязательный параметр


					//'mobileurl': ['','link'], //mobile url, ссылка парсинга товара для мобильных устройств


					//'keys': [''],
						//поля, из которых формируются ключевые слова (обычно совпадает с параметром РК header)
						//хотя бы одно указанное поле должно быть обязательным в фиде
						//его формирование обычно происходит на основе того же поля, что в параметре(ах) header,
						//иначе, в фикс.значениях и значениях полей не стоит использовать разделители [.,|!()], только пробел,
						//а также нужно учитывать что первые два длинных слова будут по очереди стартовыми в каждом КС
						//то есть, если мы укажем, например, ['коляска прогулочная',['field_name'],'новая']
						//то во всех товарах получим все КС (за исключение цифровых) /+коляска .../ и /+прогулочная .../
					     	//в отличии от других параметров можно указывать массив массивов или функций
						//суммируются все КС всех объявлений и основной настройки РК
						//обязательный параметр



					'masskeys': ['', 'digitkeys'],
										//массовое добавление КС (только через запятую!!! по всему суммарному значению однотипного варианта)
										//если есть, добавляются в массив КС параметра keys основной РК
										//Если предполагается, что это цифровое КС, то нужно заключать его в скобки (если цифр в нем нет или мало, то КС будет добавлено в обычные КС)
										//Нужно помнить, что разделителем в однотипных вариантах значений является пробел!,
										//поэтому если отсутствует запятая в значениях полей или между полем и фикс. значением, то будет одно слово!
									   //используется с параметрами keys и fixedkeys из основной РК


					'fixedkeys': ['', 'brandkeys'], //дополнительные слова в КС (через пробел и/или запятую)
										//если есть, всегда добавляются во все КС (по одному значению),
											//но никогда не добавляются к ЦБКС
									   //используется с параметрами keys и masskeys из основной РК


					'header': ['','itemName'],
						//поля, из которых формируются заголовки и пути для объявлений ads-группы товара (обычно это название товара)
						//хотя бы одно указанное поле должно быть обязательным в фиде
						//размещается в 2-х заголовках (3-й не используется в объявлениях)
						//Важно! нужно применять параметр field_digitkeys при подготовке исходного поля, если:
							//есть ЦКС в исходных полях и гугл отклоняет объявления с ошибкой "номера телефонов в тексте объявления"
							//либо есть пробелы в ЦБКС в исходных полях, из-за чего эти ЦБКС некрасиво обрезаются и/или переносятся в следующий заголовок
					     	//используется, если закомментирован аналогичный параметр в объявлениях
						//обязательный параметр



					//'header2': ['Доставка в кратчайшие сроки'],
						//Если отсутсвует 2-й заголовок, то добавляется эта инфа к объявлению во 2-й заголовок (добавляется только 30 символов)
						//Вставляется практически "как есть", без обработки, поэтому внимательно нужно.
						//Если не указан, то добавляется домен, так как 2-й заголовок обязателен



					//'price': ['','GASprice'],
						//параметр цены в заголовках и описании
						//должно быть очищено от лишнего (только цена (цифры,запятые,точки), валюта и возможен в конце разделитель[.,|!], можно все без пробелов)
						//Размещается во 2-м заголовке. Перед ценой помещается разделитель " | " (если уже заполнено начало 2-го заголовка) и убирается после цены существующий разделитель [,|!]
						//Размещается в описании. После цены в описании помещается разделитель [,] если нет одного из [.,|!]
						//Если не помещается во 2-м поле заголовка, обрезается полностью в заголовке
						//Если не помещается в полях описания, обрезается полностью в описании вместе с beforeprice



					'description': ['Есть в Наличии. Лучшая Цена, Прямые Поставки от Производителя.','brandsforads'],
						//параметр после цены и акции в описании (само описание)
						//В конце автоматически добавляется знак . (если дальше есть завершающий параметр описания и если в конце описания нет одного из [.,|!])
						//Если значение имен полей равно null, то автоматически берется текст из заголовков
						//Если не помещается в полях описания, обрезается по последнему поместившемуся слову в 3-м поле описания
						//параметр обязателен, если указан requiredescr
					     	//используется, если закомментирован аналогичный параметр в объявлениях

					'afterdescription': ['Заказывайте Сейчас!'],
						//параметр после самого описания в описании (завершающий текст описания)
						//Если не помещается в полях описания, обрезается полностью в описании
						//например, "Звоните сейчас!"
					     	//используется, если закомментирован аналогичный параметр в объявлениях


					//Последовательность размещения параметров РК в заголовках объявлений:
					//header, price (price может отсутствовать в заголовках - зависит от priceaddtype)

					//Последовательность размещения параметров в полях описания объявления:
					//startdescription, beforeprice, price, afterprice, description, afterdescription
					//Контролируется наличие одного восклицательного знака во всем описании (останется первый с левой стороны)




					//настройки одного объявления (начало блока)
					//можно копировать, изменяя значение ключа (id0) в хеше объявления
					"id0":{


						'headerTo1Line': 1,
							//записывать параметр header (и цену, если задано в priceaddtype) только в первый заголовок объявления
							//соответственно, параметр header2 всегда будет писаться во 2-й заголовок объявления
							//нужно учитывать, что цена в заголовок добавляется в параметр header (в priceaddtype),
							//то есть при наличии headerTo1Line цена чаще всего будет отсутствовать в заголовках,
							//так как не поместится в первый заголовок объявления.


						'header2': ['{KEYWord:Запчасть}[12] Есть в Наличии'],
							//Если отсутсвует 2-й заголовок, то добавляется эта инфа к объявлению во 2-й заголовок (добавляется только 30 символов)
							//если закомментирован, то совпадают с аналогичным параметром РК



						'description': ['Лучшая Цена, Прямые Поставки от Производителя.','brandsforads'],


					},
					//настройки одного объявления (конец блока)




					//настройки одного объявления (начало блока)
					//можно копировать, изменяя значение ключа (id0) в хеше объявления
					"id1":{


						'headerTo1Line': 1,
							//записывать параметр header (и цену, если задано в priceaddtype) только в первый заголовок объявления
							//соответственно, параметр header2 всегда будет писаться во 2-й заголовок объявления
							//нужно учитывать, что цена в заголовок добавляется в параметр header (в priceaddtype),
							//то есть при наличии headerTo1Line цена чаще всего будет отсутствовать в заголовках,
							//так как не поместится в первый заголовок объявления.



						//теперь вообще низзя все большие буквы (гугл начал блокировать такие объявления, русские точно, английские вроде не блокирует)
						//также поддержка посоветовала перевести КИАПАРТС в английский вариант, как название домена
						//'header2': ['{KEYWord:Всегда в Наличии}[16] в КИАПАРТС'],
						'header2': ['{KEYWord:Всегда в Наличии}[16] в KIAPARTS'],
							//Если отсутсвует 2-й заголовок, то добавляется эта инфа к объявлению во 2-й заголовок (добавляется только 30 символов)
							//если закомментирован, то совпадают с аналогичным параметром РК




					},
					//настройки одного объявления (конец блока)





			},
			//конец настроек поисковой кампании



		},
		//настройки одного фида (конец блока)
