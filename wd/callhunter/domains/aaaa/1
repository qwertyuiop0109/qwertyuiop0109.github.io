			} else if (field_type === 'referrer_url') {

				field_value = referrer_url;

				if (field_value) {

					var h = parseHtmlFUN(field_value, fieldHash['field_value_selector'], fieldHash['field_replace'], fieldHash['field_Fun'], url, checkedfields, field_name);

					//обязательно обнуляем, иначе останеться текущее значение (дальше будет присвоено значение повторно)
					field_value = '';

					if (h['errors']) {
						ScanCreateFeedsGlobalVars.errors += 'errors ' + h['errors'] + ', field: ' + field_name + "\n";
						Logger.log(ScanCreateFeedsGlobalVars.errors);
						return;
					} else {
						if (fieldHash['parsing_type']) {
							ScanCreateFeedsGlobalVars.errors += 'bad parsing_type (need to remove parsing_type), field: ' + field_name + "\n";
							Logger.log(ScanCreateFeedsGlobalVars.errors);
							return;
						} else {
							field_value = h['result'];
						}
					}


				}


//не должно быть табуляций и перевода строки в любых полях, кроме конкатенации аттрибутов (это делается программно, но есть ручные типы fixed и обычная конкатенация, надо проверять всегда обязательно для ручного ввода, для остальных - на всякий случай)
				if (/[\t\n\r]/.test(field_value)) {
					ScanCreateFeedsGlobalVars.errors += 'bad field_value_selector value (must delete \t\n\r symbols), field: ' + field_name + "\n";
					Logger.log(ScanCreateFeedsGlobalVars.errors);
					return;
				}


//				if (field_length&&field_value&&(field_length < field_value.length)) {
//сразу убираем, иначе может вылезти потом в процессе выполнения, и заблокирует фид, так как никто такие ошибки постоянно не отслеживает
				if (field_length) {
//системный параметр
//в принципе не должно устанавливаться ограничение на длину, но если оно есть и вышли за него, то выдаем ошибку
					ScanCreateFeedsGlobalVars.errors += 'bad field_length (need to remove field_length), field: ' + field_name + "\n";
					Logger.log(ScanCreateFeedsGlobalVars.errors);
					return;
				}


//в конце анализ field_required
				if ((typeof field_required !== 'string')&&(typeof field_required !== 'number')) {
					ScanCreateFeedsGlobalVars.errors += 'bad field_required, field: ' + field_name + "\n";
					Logger.log(ScanCreateFeedsGlobalVars.errors);
					return;
				}

				if (field_required === -1) {
					if (field_value)
						return;
				} else if (field_required === 0) {
//записываем необязательное поле, в т.ч. пустое
				} else if (field_required === 4) {
					if ((!field_value)&&feedfiles_flg)
						feedfiles_exist = 0;
				} else if (field_required === 5) {
					if ((!field_value)&&search_flg)
						search_exist = 0;
				} else if (field_required === 1) {
					if (!field_value)
						return;
				} else if (field_required === 2) {
					ScanCreateFeedsGlobalVars.errors += 'bad field_required, field: ' + field_name + "\n";
					Logger.log(ScanCreateFeedsGlobalVars.errors);
					return;
				} else if (field_required === 3) {
					ScanCreateFeedsGlobalVars.errors += 'bad field_required, field: ' + field_name + "\n";
					Logger.log(ScanCreateFeedsGlobalVars.errors);
					return;
				} else if (typeof field_required == 'string') {
					if (!fieldHash['field_Fun']) {
//если есть field_Fun, то она определяет значение необязательного зависимого поля
//						var recfields = field_required.split(/[\s\,]+/);
						var recfields = field_required.split(/[\s\,]*\,[\s\,]*/);
						var foundnotemptyfields = 0;
						for (var ii = 0; ii < recfields.length; ii++) {
							if (checkedfields[recfields[ii]]&&checkedfields[recfields[ii]]['field_value']) {
								foundnotemptyfields++;
							} else if (!checkedfields.hasOwnProperty(recfields[ii])) {
//отсутствует выше одно из полей, указанных в field_required
								ScanCreateFeedsGlobalVars.errors += 'bad field_required:'+ ' not exists field_name ' + recfields[ii] + ' in previos fields, field: ' + field_name + "\n";
								Logger.log(ScanCreateFeedsGlobalVars.errors);
								return;
							}
						}
//						if ((!fieldHash['field_Fun'])&&foundnotemptyfields) {
						if (foundnotemptyfields) {
							field_value = '';
						}
					}
				} else {
					ScanCreateFeedsGlobalVars.errors += 'bad field_required, field: ' + field_name + "\n";
					Logger.log(ScanCreateFeedsGlobalVars.errors);
					return;
				}



