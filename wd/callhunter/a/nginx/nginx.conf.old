user  nginx;
worker_processes  2;
worker_priority -5;
worker_rlimit_nofile 100000;
error_log  /var/log/nginx/error.log crit;
pid        /var/run/nginx.pid;

events {
	worker_connections  50000;
	use epoll;
}

http {
	include       /etc/nginx/mime.types;
	default_type  application/octet-stream;
	log_format  main  '$remote_addr - $remote_user [$time_local] $scheme '
		'HOST $host "$request" $status $body_bytes_sent "$http_referer" '
		'"$http_user_agent" "http_x_forwarded_for"';

#	access_log  /var/log/nginx/access.log  main;
#После тестов и При большой посещаемости рекомендуется отключить логирование запросов access.log:
#указать access_log off; и закомментировать везде access_log /var/log/nginx/access.log  main;
	access_log off;



	perl_set $removeip '
	sub {
		my $r = shift;
		my $file="/var/log/503ips/".$r->remote_addr;
		unless (-f $file.".long") {
			unlink $file if -f $file;
			unlink $file.".midl" if -f $file.".midl";
		}
		return 1;
	}';



	perl_set $crc32_captchaimgfl '
	sub {
		use String::CRC32;
		my $r = shift;
		my $captchaimgfl=$r->uri;
		$captchaimgfl=~ s/.*\/captchaimgfl\/(.+)\.gif/$1/g;
		my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst)=localtime(time);
		return crc32($captchaimgfl.$r->remote_addr."secret HjkYYkdmsG".$mday.$mon.$year);
	}';

	perl_set $crc32_ct '
	sub {
		use String::CRC32;
		my $r = shift;
		my $ct=$r->uri;
		$ct=~ s/.*\/icaptcha\/(.+)\.gif/$1/g;
		my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst)=localtime(time);
		return crc32($ct.$r->remote_addr."secret Gl6HbvpxRR".$mday.$mon.$year);
	}';

	perl_set $check_input '
	sub {
		use String::CRC32;
		my $r = shift;
		my $input=$r->args;
		return 0 if $input!~ s/^.*input=(\w+).*$/$1/i;
		my $cookie_ct=$r->header_in("Cookie");
		$cookie_ct=~ s/.+ct=([^\ ]+).*/$1/g;
		my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst)=localtime(time);
#		if ( $cookie_ct == crc32($input.$r->remote_addr."secret Gl6HbvpxRR".$mday.$mon.$year) ) { return 1; } else {return 0;}
		if ((-f "/home/nginx/icaptcha/".$input.".gif")&&( $cookie_ct == crc32($input.$r->remote_addr."secret Gl6HbvpxRR".$mday.$mon.$year) )) { return 1; } else {return 0;}
	}';

	perl_set $crc32_ha '
	sub {
		use String::CRC32;
		my $r = shift;
		return crc32($r->remote_addr."secret Gl6HbvpxQ");
	}';


	perl_set $check_ha '
	sub {
		use String::CRC32;
		my $r = shift;
		my $cookie_ha=$r->header_in("Cookie");
		$cookie_ha=~ s/.+ha=([^\ ]+).*/$1/g;
		if ( crc32($r->remote_addr."secret Gl6HbvpxQ") == $cookie_ha ) { return 1; } else {return 0;}
	}';


	perl_set $set503andcookie '
	sub {
		my $r = shift;
		my $uri=$r->uri;
		my $cookiehost=$r->header_in("Host");
		my $iphost=0;
		if ($cookiehost =~ /^(www\.)?\[?((([^\]]*\:[^\]]*\:[^\]]*)|([\d\.]+\.\d+))|([^\]\:]+[^\]\:\d]))\]?(:\d*)?$/i) {
			$cookiehost = $2;
			$iphost=$3;
		}
		$cookiehost = ".".$cookiehost if !$iphost;
		if ($r->args&&($r->request_method eq "GET")){
			$uri=$uri."?".$r->args;
		} 
		if ($r->request_method ne "POST") {
			$r->status(503);
		} else {
			$r->status(302);
		}
		$r->header_out("Set-Cookie","fu=".$uri."; path=/; domain=".$cookiehost);
		$r->header_out("Pragma","no-cache");
		$r->header_out("Cache-Control","private, max-age=0, no-cache");
		if ($r->request_method ne "POST") {
			$r->send_http_header("text/html");
		} else {
			$r->header_out("Location",$r->uri);
			$r->send_http_header;
			$r->flush;
		}
	        return 1;
	}';


	perl_set $set503andmaincookie '
	sub {
		my $r = shift;
		my $cookiehost=$r->header_in("Host");
		my $iphost=0;
		if ($cookiehost =~ /^(www\.)?\[?((([^\]]*\:[^\]]*\:[^\]]*)|([\d\.]+\.\d+))|([^\]\:]+[^\]\:\d]))\]?(:\d*)?$/i) {
			$cookiehost = $2;
			$iphost=$3;
		}
		$cookiehost = ".".$cookiehost if !$iphost;
		if ($r->request_method ne "POST") {
			$r->status(503);
		} else {
			$r->status(302);
		}
		$r->header_out("Set-Cookie","fu=/; path=/; domain=".$cookiehost);
		$r->header_out("Pragma","no-cache");
		$r->header_out("Cache-Control","private, max-age=0, no-cache");
		if ($r->request_method ne "POST") {
			$r->send_http_header("text/html");
		} else {
			$r->header_out("Location",$r->uri);
			$r->send_http_header;
			$r->flush;
		}
	        return 1;
	}';


	perl_set $set503withoutcookie '
	sub {
		my $r = shift;
		if ($r->request_method ne "POST") {
			$r->status(503);
		} else {
			$r->status(302);
		}
		$r->header_out("Pragma","no-cache");
		$r->header_out("Cache-Control","private, max-age=0, no-cache");
		if ($r->request_method ne "POST") {
			$r->send_http_header("text/html");
		} else {
			$r->header_out("Location",$r->uri);
			$r->send_http_header;
			$r->flush;
		}
	        return 1;
	}';


	perl_set $exploit '
	sub {
		my $r = shift;
		my $args=$r->args;
		if ($args) {
			if ($args =~ /\w*((\%27)|(\'))((\%6F)|o|(\%4F))((\%72)|r|(\%52))/ix) {
			        return 1;
			}
			if ($args =~ /((\%27)|(\'))(union|select|insert|update|delete|drop|grant)/ix) {
			        return 1;
			}
			if ($args =~ /exec(\s|\+)+(s|x)p\w+/ix) {
			        return 1;
			}
			if ($args =~ /((\%3C)|<)((\%2F)|\/)*[a-z0-9\%]+((\%3E)|>)/ix) {
			        return 1;
			}
			if ($args =~ /((\%3C)|<)((\%69)|i|(\%49))((\%6D)|m|(\%4D))((\%67)|g|(\%47))[^\n]+((\%3E)|>)/i) {
			        return 1;
			}
		}
	        return 0;
	}';


	sendfile        on;
	tcp_nopush     on;
	tcp_nodelay    on;

        reset_timedout_connection on;
        client_header_timeout  10;
        client_body_timeout    10;
        send_timeout            5;
        keepalive_timeout       0;

	server_tokens off;

#включаем gzip, в т.ч. для проксируемых ответов (этот блок ставим только для своих серверов, если нужно, так как доп.нагрузка на этот сервер)
#	gzip on;
#	gzip_min_length 1100;
#	gzip_disable "msie6";
#	gzip_proxied any;
#	gzip_comp_level 3;
#	gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
#	gzip_vary on;


limit_req_zone $binary_remote_addr zone=req_click:10m rate=1r/s;
limit_zone conn_click $binary_remote_addr  10m;
#limit_conn_zone $binary_remote_addr  zone=conn_click:10m;

limit_req_zone $binary_remote_addr zone=req_scriptonpage:10m rate=1r/s;
limit_zone conn_scriptonpage $binary_remote_addr  10m;
#limit_conn_zone $binary_remote_addr zone=conn_scriptonpage:10m;

limit_req_zone $binary_remote_addr zone=req_img:10m rate=1200r/m;
limit_zone conn_img $binary_remote_addr 10m;
#limit_conn_zone $binary_remote_addr zone=conn_img:10m;


proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=one:16m inactive=7d max_size=1024m;
proxy_temp_path /var/cache/nginx/temp;

	server {


		set $whitelistip 0;


#---единая конфигурация для всех---------

                server_name     _;

#		set $proxy_ip 192.168.2.4;
		set $exploitprotect 1;
		include apache_ip.conf;
		set $proxy_port 8080;
		set $proxy_ssl_port 8443;
		set $domain_num 0; #порядковый номер правил/домена (обязательно уникальный)

		set $domain_uri $domain_num:$request_uri;
		set $domain_remote_addr $domain_num:$remote_addr;
#в разделе, указанном ниже настаиваются подключенные скрипты, общие для всех доменов кроме отдельно настроенных
#------------------------------настройка подключенных скриптов на странице---------------------------


set $cookiehost $host;
set $iphost 0;
if ($cookiehost ~* ^(www\.)?\[?((([^\]]*\:[^\]]*\:[^\]]*)|([\d\.]+\.\d+))|([^\]\:]+[^\]\:\d]))\]?(:\d*)?$ ) {
	set $cookiehost $2;
	set $iphost $3;
}
if ($iphost ~* /^0?$/) {
	set $cookiehost .$cookiehost;
}

if ($iphost) {
		set $proxy_ip 127.0.0.1;
		set $exploitprotect 1;
		set $proxy_port 8080;
		set $proxy_ssl_port 7443;
		set $domain_num 1; #порядковый номер правил/домена (обязательно уникальный)

		set $domain_uri $domain_num:$request_uri;
		set $domain_remote_addr $domain_num:$remote_addr;

#в разделе, указанном ниже настаиваются подключенные скрипты для этого домена (доменов)
#------------------------------настройка подключенных скриптов на странице---------------------------
}


#-----------------------------------------

		include whiteip.conf;
		if ( $remote_addr = $mainwhiteip ) {
			set $whitelistip 1;
			set $exploitprotect 0;
		}

		set $proxy_pass http://$proxy_ip:$proxy_port;

		if ( $scheme = 'https' ) {
			set $proxy_pass https://$proxy_ip:$proxy_ssl_port;
		}
	        ssl_certificate      /etc/httpd/conf/ssl.crt/server.crt;
	        ssl_certificate_key  /etc/httpd/conf/ssl.key/server.key;
	        ssl_session_timeout  5m;
	        ssl_protocols  SSLv2 SSLv3 TLSv1;
	        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	        ssl_prefer_server_ciphers   on;
                listen   443 ssl;
#при использовании ipv6 адресов раскомментировать (видимо указав адрес)
		listen   [::]:443 ipv6only=on ssl;



                listen   80;
#при использовании ipv6 адресов раскомментировать (видимо указав адрес)
		listen   [::]:80 ipv6only=on;


		recursive_error_pages on;
		error_page  589 = @444;
		if ($request_method !~ ^(GET|HEAD|POST)$ ) {
			return 589;
		}



		location @clickurls {
			error_page  503 = @humanverifyclick;

			limit_req   zone=req_click  burst=11 nodelay;
			limit_conn  conn_click  12;

#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/clickaccess.log main;
			access_log /var/log/nginx/unblockedaccess.log main;

			recursive_error_pages on;

			error_page  599 = @humanverifiedclick;

			error_page  580 = @onepagelocation;

			error_page  598 = @notclickurls;

			error_page  581 = @401;

			if ($whitelistip) {
				return 599;
			}

			if ($exploitprotect) {
				set $exploitprotect $exploit;
			}
			if ($exploitprotect) {
				return 581;
			}

#------------------------------настройка подключенных скриптов на странице---------------------------

	                set $scritpsonpages 0;

			if ($domain_uri ~* ^0:\/(pagescripts|pagehtml|files|stats|adv|ads|adjs|adview|adjsm|manimg)\/) {
				set $scritpsonpages 1;
			}

			if ($domain_uri ~* ^1:\/(manimg)\/) {
				set $scritpsonpages 1;
			}

#------------------------------------------------------------------------------------------------------

			if ( $scritpsonpages ) {
				return 598;
			}


			set $capcha_invite '';
			if ( $check_ha = "0" ) {
				set $capcha_invite INV;
			}
			if ( -f "/var/log/503ips/$remote_addr" ) {
				set $capcha_invite 1$capcha_invite;
			}
			if ($capcha_invite ~ 1INV) {
				set $forfu $set503andcookie;
				return 580;
			}
			if ($capcha_invite !~ INV) {
				return 599;
			}



			proxy_pass         $proxy_pass;
			proxy_redirect     off;
			proxy_set_header   Host             $host;
			proxy_set_header   X-Real-IP        $remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

			proxy_intercept_errors on;
			error_page   403  =  @403;

			client_max_body_size       10m;
			client_body_buffer_size    128k;
			proxy_connect_timeout      90;
			proxy_send_timeout         90;
			proxy_read_timeout         90;
			proxy_buffer_size          4k;
			proxy_buffers              4 32k;
			proxy_busy_buffers_size    64k;
			proxy_temp_file_write_size 64k;

		}

		location / {


			location = /map.php {
				error_page  503 = @503;
				limit_req   zone=req_click  burst=1 nodelay;
				limit_conn  conn_click  2;
#				access_log /var/log/nginx/access.log  main;
				access_log /var/log/nginx/scanaccess.log main;
				access_log /var/log/nginx/slowrobotaccess.log main;
				root /home/nginx;
			}


			location / {
				error_page  503 = @humanverify;
				limit_req   zone=req_img  burst=200 nodelay;
				limit_conn  conn_img  200;

#				access_log /var/log/nginx/access.log  main;
				access_log /var/log/nginx/unblockedaccess.log main;

				recursive_error_pages on;

				error_page  599 = @humanverified;

				error_page  580 = @onepagelocation;

				error_page  597 = @clickurls;
				if ($request_uri ~* ^.*(\?.*|((\.(htm|html|pl|php|cgi|asp|aspx))|(\/[\w\-]*)))$) {
					return 597;
				}

				if ($whitelistip) {
					return 599;
				}

				set $capcha_invite '';
				if ( $check_ha = "0" ) {
					set $capcha_invite INV;
				}
				if ( -f "/var/log/503ips/$remote_addr" ) {
					set $capcha_invite 1$capcha_invite;
				}


				if ( $cookie_fu ) {
					set $capcha_invite 2$capcha_invite;
				}
				if ($capcha_invite ~ 21INV) {
					set $forfu $set503withoutcookie;
					return 580;
				}


				if ($capcha_invite ~ 1INV) {
					set $forfu $set503andcookie;
					return 580;
				}
				if ($capcha_invite !~ INV) {
					return 599;
				}

proxy_cache one;
proxy_cache_key "$request_method|$http_if_modified_since|$http_if_none_match|$is_args|$host|$request_uri";
proxy_hide_header "Set-Cookie";
proxy_ignore_headers "Cache-Control" "Expires";
proxy_cache_valid 200 10m;
proxy_cache_valid 302 304 5m;
proxy_cache_valid 301 1h;
proxy_cache_valid 503 4s;
proxy_cache_valid any 10m;
proxy_cache_use_stale http_502 http_503 http_504;


				proxy_pass         $proxy_pass;
				proxy_redirect     off;
				proxy_set_header   Host             $host;
				proxy_set_header   X-Real-IP        $remote_addr;
				proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

				proxy_intercept_errors on;
				error_page   403  =  @403;

				client_max_body_size       10m;
				client_body_buffer_size    128k;
				proxy_connect_timeout      90;
				proxy_send_timeout         90;
				proxy_read_timeout         90;
				proxy_buffer_size          4k;
				proxy_buffers              4 32k;
				proxy_busy_buffers_size    64k;
				proxy_temp_file_write_size 64k;

			}

		}



		location @notclickurls {
			error_page  503 = @humanverify;
			limit_req   zone=req_scriptonpage  burst=19 nodelay;
			limit_conn  conn_scriptonpage  20;

#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/noclickaccess.log main;
			access_log /var/log/nginx/unblockedaccess.log main;

			recursive_error_pages on;

			error_page  599 = @humanverified;

			error_page  580 = @onepagelocation;

			if ($whitelistip) {
				return 599;
			}

			set $capcha_invite '';
			if ( $check_ha = "0" ) {
				set $capcha_invite INV;
			}
			if ( -f "/var/log/503ips/$remote_addr" ) {
				set $capcha_invite 1$capcha_invite;
			}


			if ( $cookie_fu ) {
				set $capcha_invite 2$capcha_invite;
			}
			if ($capcha_invite ~ 21INV) {
				set $forfu $set503withoutcookie;
				return 580;
			}


			if ($capcha_invite ~ 1INV) {
				set $forfu $set503andcookie;
				return 580;
			}
			if ($capcha_invite !~ INV) {
				return 599;
			}

			proxy_pass         $proxy_pass;
			proxy_redirect     off;
			proxy_set_header   Host             $host;
			proxy_set_header   X-Real-IP        $remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

			proxy_intercept_errors on;
			error_page   403  =  @403;

			client_max_body_size       10m;
			client_body_buffer_size    128k;
			proxy_connect_timeout      90;
			proxy_send_timeout         90;
			proxy_read_timeout         90;
			proxy_buffer_size          4k;
			proxy_buffers              4 32k;
			proxy_busy_buffers_size    64k;
			proxy_temp_file_write_size 64k;

		}

		location /captchaimgfl/ { # это ссылка на папку captcha для приложений
			error_page  503 = @503_captcha_image_fl;
			limit_req   zone=req_scriptonpage  burst=3 nodelay;
			limit_conn  conn_scriptonpage  4;

#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/slowrobotaccess.log main;

			recursive_error_pages on;

			random_index on;
			add_header Set-Cookie "captchaimgfl=$crc32_captchaimgfl; path=/; domain=$cookiehost";
			add_header Pragma "no-cache";
			add_header Cache-Control "private, max-age=0, no-cache";
			root /home/nginx;
		}
		location @503_captcha_image_fl {
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/quickrobotaccess.log main;
			random_index on;
			add_header Set-Cookie "captchaimgfl=$crc32_captchaimgfl; path=/; domain=$cookiehost";
			add_header Pragma "no-cache";
			add_header Cache-Control "private, max-age=0, no-cache";
			root /home/nginx;
		}


		location /icaptcha/ {
			error_page  503 = @503_captcha_image;
			limit_req   zone=req_scriptonpage  burst=3 nodelay;
			limit_conn  conn_scriptonpage  4;

#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/slowrobotaccess.log main;

			recursive_error_pages on;

			random_index on;
			add_header Set-Cookie "ct=$crc32_ct; path=/; domain=$cookiehost";
			add_header Pragma "no-cache";
			add_header Cache-Control "private, max-age=0, no-cache";
			root /home/nginx;
		}

		location @503_captcha_image {
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/quickrobotaccess.log main;
			random_index on;
			add_header Set-Cookie "ct=$crc32_ct; path=/; domain=$cookiehost";
			add_header Pragma "no-cache";
			add_header Cache-Control "private, max-age=0, no-cache";
			root /home/nginx;
		}



		location /ncaptcha/ {
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/humanclickaccess.log main;
#			access_log /var/log/nginx/humanaccess.log main;

			error_page  590 = @onepagelocation;
			recursive_error_pages on;

			set $tmpfu /;
			if ( $cookie_fu ) {
				set $tmpfu $cookie_fu;
			}

			if ( $check_input ) {
				set $rmip $removeip;
				add_header Set-Cookie "ha=$crc32_ha; path=/; domain=$cookiehost";
				add_header Set-Cookie "fu=; path=/; domain=$cookiehost";
				rewrite ^ $tmpfu? redirect;

			}
			if ( $cookie_fu ) {
				set $forfu $set503withoutcookie;
				return 590;
			}
			set $forfu $set503andmaincookie;
			return 590;
		}


		location /rcaptcha/ {
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/humanclickaccess.log main;
#			access_log /var/log/nginx/humanaccess.log main;

			error_page  590 = @503false_captcha;
			recursive_error_pages on;

			set $tmpfu /;
			if ( $cookie_fu ) {
				set $tmpfu $cookie_fu;
			}

			if ( $check_input ) {
				set $rmip $removeip;
				add_header Set-Cookie "ha=$crc32_ha; path=/; domain=$cookiehost";
				add_header Set-Cookie "fu=; path=/; domain=$cookiehost";
				rewrite ^ $tmpfu? redirect;
			}
			if ( $cookie_fu ) {
				set $forfu $set503withoutcookie;
				return 590;
			}
			set $forfu $set503andmaincookie;
			return 590;
		}



		location @503false_captcha {
			error_page  503 = @503false_captcha_quick;
			limit_req   zone=req_click  burst=3 nodelay;
			limit_conn  conn_click  4;

#		        access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/slowrobotaccess.log main;
			try_files /503false.html =404;
			root /home/nginx;
		}


		location @503false_captcha_quick {
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/quickrobotaccess.log main;
			try_files /503false.html =404;
			root /home/nginx;
		}


	        location @onepagelocation {
			error_page  503 = @503_captcha_quick;
			limit_req   zone=req_click  burst=3 nodelay;
			limit_conn  conn_click  4;

#		        access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/slowrobotaccess.log main;
			try_files /503.html =404;
			root /home/nginx;

		}


		location @503_captcha_quick {
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/quickrobotaccess.log main;
			try_files /503.html =404;
			root /home/nginx;
		}

		location @503_captcha_quick_unblocked {
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/quickrobotaccess.log main;
			access_log /var/log/nginx/quickrobotunblockedaccess.log main;
			try_files /503.html =404;
			root /home/nginx;
		}


	        location @humanverifiedclick {

#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/humanclickaccess.log main;

#			access_log /var/log/nginx/humanaccess.log main;

			proxy_pass         $proxy_pass;
			proxy_redirect     off;
			proxy_set_header   Host             $host;
			proxy_set_header   X-Real-IP        $remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;


			client_max_body_size       10m;
			client_body_buffer_size    128k;
			proxy_connect_timeout      90;
			proxy_send_timeout         90;
			proxy_read_timeout         90;
			proxy_buffer_size          4k;
			proxy_buffers              4 32k;
			proxy_busy_buffers_size    64k;
			proxy_temp_file_write_size 64k;
		}


	        location @humanverified {

#			access_log /var/log/nginx/access.log  main;
#			access_log /var/log/nginx/humanaccess.log main;

			proxy_pass         $proxy_pass;
			proxy_redirect     off;
			proxy_set_header   Host             $host;
			proxy_set_header   X-Real-IP        $remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;


			client_max_body_size       10m;
			client_body_buffer_size    128k;
			proxy_connect_timeout      90;
			proxy_send_timeout         90;
			proxy_read_timeout         90;
			proxy_buffer_size          4k;
			proxy_buffers              4 32k;
			proxy_busy_buffers_size    64k;
			proxy_temp_file_write_size 64k;
		}


	        location @humanverifyclick {

#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/humanclickaccess.log main;
#			access_log /var/log/nginx/humanaccess.log main;

			error_page  590 = @503_captcha_quick_unblocked;

			set $capcha_invite '';
			if ( $check_ha = "0" ) {
				set $capcha_invite INV;
			}
			if ($whitelistip) {
				set $capcha_invite '';
			}
			if ($capcha_invite ~ INV) {
				set $forfu $set503andcookie;
				return 590;
			}

			proxy_pass         $proxy_pass;
			proxy_redirect     off;
			proxy_set_header   Host             $host;
			proxy_set_header   X-Real-IP        $remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

			proxy_intercept_errors on;
			error_page   403  =  @403;

			client_max_body_size       10m;
			client_body_buffer_size    128k;
			proxy_connect_timeout      90;
			proxy_send_timeout         90;
			proxy_read_timeout         90;
			proxy_buffer_size          4k;
			proxy_buffers              4 32k;
			proxy_busy_buffers_size    64k;
			proxy_temp_file_write_size 64k;


		}

	        location @humanverify {

#			access_log /var/log/nginx/access.log  main;
#			access_log /var/log/nginx/humanaccess.log main;

			error_page  590 = @503_captcha_quick_unblocked;

			set $capcha_invite '';
			if ( $check_ha = "0" ) {
				set $capcha_invite INV;
			}
			if ( $cookie_fu ) {
				set $capcha_invite 1$capcha_invite;
			}
			set $capcha_invite 2$capcha_invite;

			if ($whitelistip) {
				set $capcha_invite '';
			}

			if ($capcha_invite ~ 2INV) {
				set $forfu $set503andcookie;
				return 590;
			}
			if ($capcha_invite ~ 1INV) {
				set $forfu $set503withoutcookie;
				return 590;
			}

			proxy_pass         $proxy_pass;
			proxy_redirect     off;
			proxy_set_header   Host             $host;
			proxy_set_header   X-Real-IP        $remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

			proxy_intercept_errors on;
			error_page   403  =  @403;

			client_max_body_size       10m;
			client_body_buffer_size    128k;
			proxy_connect_timeout      90;
			proxy_send_timeout         90;
			proxy_read_timeout         90;
			proxy_buffer_size          4k;
			proxy_buffers              4 32k;
			proxy_busy_buffers_size    64k;
			proxy_temp_file_write_size 64k;


		}

		location @403 {
#		      access_log /var/log/nginx/access.log  main;
		      access_log /var/log/nginx/apachequickrobotaccess.log main;
		      access_log /var/log/nginx/unblockedaccess.log main;
		      if ( -f "/var/log/503longwhite/$remote_addr" ) {
#			      access_log /var/log/nginx/access.log  main;
			      access_log /var/log/nginx/apachequickrobotaccess.log main;
			      return 403;
		      }
		      return 403;
		}


		location @444 {
			error_page  503 = @444quick;
			limit_req   zone=req_click  burst=1 nodelay;
			limit_conn  conn_click  2;
			recursive_error_pages on;
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/slowrobotaccess.log main;
			try_files /444.html =444;
			root /home/nginx/emptu;
		}


		location @444quick {
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/quickrobotaccess.log main;
			return 444;
		}


		location @401 {
			error_page  503 = @401quick;
			limit_req   zone=req_click  burst=1 nodelay;
			limit_conn  conn_click  2;
			recursive_error_pages on;
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/slowrobotaccess.log main;
			try_files /401.html =401;
			root /home/nginx/emptu;
		}

		location @401quick {
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/quickrobotaccess.log main;
			return 401;
		}

		location @503 {
#			access_log /var/log/nginx/access.log  main;
			access_log /var/log/nginx/quickrobotaccess.log main;
			return 503;
		}

	}

	server {
		listen 127.0.0.1;
		server_name localhost;
		location /nginx_status {
			stub_status on;
			access_log   off;
			allow 127.0.0.1;
			deny all;
		}
	}


}

